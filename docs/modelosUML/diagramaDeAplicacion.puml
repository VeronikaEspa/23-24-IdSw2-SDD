@startuml DiagramaDeAplicacion

class App {
    - WorldController worldController
    - World gameWorld
    - WorldView gameWorldView

    + main()
    - initializeGame()
    - runGameCycle()
}

package "Model" {
    class World {
        - Map map
        - List<Entity> entities
        - Time time

        + simulateCycle()
        + addEntity(Entity newEntity)
    }

    class Time {
        - TimesOfDay timeOfDay
        - int currentTime

        + advanceTime()
        + setTimeOfDay(int currentTime)
        + resetDay()
        + getCurrentTime() : int
        + getTimeOfDay() : TimesOfDay
    }

    class Map {
        - Tile[][] tiles

        + updateTile(Point point, Tile newTile)
        + getTile(Point point) : Tile
        + getHeight() : int
        + getWidth() : int
    }

    class Tile {
        - TileTypes type

        + changeType(TileTypes newType)
        + getType() : TileTypes
        + getAsciiSymbol() : String
        + getAsciiColor() : String
    }

    abstract class Entity {
        - Point position
        - Transport transportInUse

        + moveTo(Point newPosition)
        + changeTransport(Transport newTransport)
        + getTransportInUse() : Transport
    }

    class Character extends Entity {
        - CharacterType type
        - Transport[] availableTransports

        + getAvailableTransports() : Transport[]
        + getCharacterType() : CharacterType
    }

    class Transport {
        - TransportTypes type

        + getType() : TransportTypes
        + getSpeed() : int
        + getAsciiSymbol() : String
    }

    class Point {
        - int x
        - int y

        + getLocation() : int[]
        + setLocation(int x, int y)
    }

    enum TileTypes {
        Floor
        Sand
        Wall
        ShortGrass
        MediumGrass
        TallGrass
        Water
        DeepWater
        Mountain
    }

    enum TimesOfDay {
        Morning
        Afternoon
        Evening
        Night
    }

    enum TransportTypes {
        Foot
        Horse
        Boat
        MagicCarpet
    }

    enum CharacterType {
        Playable
        NonPlayable
    }
}

package "View" {
    class WorldView {
        - String[][] displayMatrix

        + displayWorld(World world)
        - cleanScreen()
        - displayTime(Time time)
        - displayMap(Map map, List<Entity> entities)
    }
}

package "Controller" {
    class WorldController {
        - World world
        - WorldView worldView

        + initializeGame()
        + initializeWorldMap()
        + readFileContent(String filePath) : List<String[]>
        + populateMap(List<String[]> mapData, Map worldMap)
        + createTileByNumber(String tileNumber) : Tile
        + getRandomCharacterMovement() : char
        + getUserInput() : char
        + processUserInput(char input) : char
    }
}

World --> Map
World --> Entity
World --> Time
Map --> Tile
Tile --> TileTypes
Entity --> Point
Entity --> Transport
Transport --> TransportTypes
Time --> TimesOfDay
Character --> CharacterType
WorldController --> World
WorldController --> WorldView
App --> WorldController
@enduml
